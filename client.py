import socket
from RSA import generer_cles, chiffrer, trouver_premier, dechiffrer

def start_client():
    client_socket = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    server_address = ('localhost', 12345)

    try:
        client_socket.connect(server_address)
        print("Connecté au serveur")
        command = client_socket.recv(1024).decode()
        print(f"Commande reçue: {command}")

        if command == 'chiffre':
            p = trouver_premier(100, 300)
            q = trouver_premier(300, 500)
            public, private = generer_cles(p, q)

            filename = "message.txt"
            with open(filename, "r") as file:
                content = file.read().strip()

            message_chiffre = chiffrer(public, content)

            with open("crypted.txt", "w") as file:
                file.write(' '.join(map(str, message_chiffre)))

            print("Le message a été chiffré et sauvegardé dans crypted.txt.")
            ack = 'ACK'
            client_socket.send(ack.encode())
            
        # Recevoir la commande du serveur
        command = client_socket.recv(1024).decode()
        print(f"Commande reçue: {command}")
        if command == 'dechiffre':
            with open("crypted.txt", "r") as file:
                message_chiffre = list(map(int, file.read().split()))

            message_dechiffre = dechiffrer(private, message_chiffre)
            with open("decrypted.txt", "w") as file:
                file.write(message_dechiffre)
            print("Le message a été chiffré et sauvegardé dans crypted.txt.")
            ack = 'ACK'
            client_socket.send(ack.encode())

    except Exception as e:
        print(f"Erreur lors de la connexion au serveur: {e}")
    finally:
        client_socket.close()

start_client()
